{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Blood_bank_react_redux_firebase\\\\blood_bank\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './login.css';\nimport { auth, db } from '../firebase/firebase';\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState('blood_bank'); // default user type\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in from localStorage\n    const loggedInStatus = localStorage.getItem('login');\n    const storedUserType = localStorage.getItem('userType');\n    if (loggedInStatus === 'true' && storedUserType) {\n      setIsLoggedIn(true);\n      setUserType(storedUserType);\n      if (storedUserType === 'blood_bank') {\n        navigate('/bb-dash');\n      } else if (storedUserType === 'hospital') {\n        navigate('/hos-data');\n      }\n    }\n  }, [navigate]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Fetch user type from Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        const data = userDoc.data();\n        const userTypeFromDb = data.userType;\n\n        // Store the user type and login status in localStorage\n        localStorage.setItem('login', 'true');\n        localStorage.setItem('userType', userTypeFromDb);\n        setIsLoggedIn(true);\n\n        // Redirect based on user type\n        if (userTypeFromDb === 'blood_bank') {\n          navigate('/bb-dash');\n        } else if (userTypeFromDb === 'hospital') {\n          navigate('/hos-data');\n        }\n      } else {\n        setError('User type not found.');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      localStorage.setItem('login', 'false');\n      localStorage.removeItem('userType');\n      setIsLoggedIn(false);\n      navigate('/');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isLoggedIn) {\n      handleLogout();\n    } else {\n      handleLogin(e);\n    }\n  };\n  const handleGoHome = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: userType,\n          onChange: e => setUserType(e.target.value),\n          required: true,\n          disabled: true // Disabled because userType should be fetched from the database\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blood_bank\",\n            children: \"Blood Bank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hospital\",\n            children: \"Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoggedIn ? 'Logout' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGoHome,\n        className: \"go-home-btn\",\n        children: \"Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"52uSwMhceLLIDSbbL+6OCXPH9BM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","signInWithEmailAndPassword","signOut","useNavigate","doc","getDoc","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","error","setError","isLoggedIn","setIsLoggedIn","navigate","loggedInStatus","localStorage","getItem","storedUserType","handleLogin","e","preventDefault","userCredential","user","userDoc","uid","exists","data","userTypeFromDb","setItem","message","handleLogout","removeItem","handleSubmit","handleGoHome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/React/Blood_bank_react_redux_firebase/blood_bank/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './login.css';\r\nimport { auth, db } from '../firebase/firebase';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('blood_bank'); // default user type\r\n  const [error, setError] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in from localStorage\r\n    const loggedInStatus = localStorage.getItem('login');\r\n    const storedUserType = localStorage.getItem('userType');\r\n    if (loggedInStatus === 'true' && storedUserType) {\r\n      setIsLoggedIn(true);\r\n      setUserType(storedUserType);\r\n      if (storedUserType === 'blood_bank') {\r\n        navigate('/bb-dash');\r\n      } else if (storedUserType === 'hospital') {\r\n        navigate('/hos-data');\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      // Fetch user type from Firestore\r\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n      if (userDoc.exists()) {\r\n        const data = userDoc.data();\r\n        const userTypeFromDb = data.userType;\r\n\r\n        // Store the user type and login status in localStorage\r\n        localStorage.setItem('login', 'true');\r\n        localStorage.setItem('userType', userTypeFromDb);\r\n        setIsLoggedIn(true);\r\n\r\n        // Redirect based on user type\r\n        if (userTypeFromDb === 'blood_bank') {\r\n          navigate('/bb-dash');\r\n        } else if (userTypeFromDb === 'hospital') {\r\n          navigate('/hos-data');\r\n        }\r\n      } else {\r\n        setError('User type not found.');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      localStorage.setItem('login', 'false');\r\n      localStorage.removeItem('userType');\r\n      setIsLoggedIn(false);\r\n      navigate('/');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isLoggedIn) {\r\n      handleLogout();\r\n    } else {\r\n      handleLogin(e);\r\n    }\r\n  };\r\n\r\n  const handleGoHome = () => {\r\n    navigate('/home');\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {!isLoggedIn && (\r\n        <form onSubmit={handleSubmit} className='login-box'>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              value={userType}\r\n              onChange={(e) => setUserType(e.target.value)}\r\n              required\r\n              disabled // Disabled because userType should be fetched from the database\r\n            >\r\n              <option value=\"blood_bank\">Blood Bank</option>\r\n              <option value=\"hospital\">Hospital</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\">{isLoggedIn ? 'Logout' : 'Login'}</button>\r\n          <button type=\"button\" onClick={handleGoHome} className='go-home-btn'>\r\n            Go to Home\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}