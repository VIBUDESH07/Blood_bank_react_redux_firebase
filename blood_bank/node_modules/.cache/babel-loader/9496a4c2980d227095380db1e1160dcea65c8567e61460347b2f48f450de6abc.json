{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Blood_bank_react_redux_firebase\\\\blood_bank\\\\src\\\\components\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  requiredType,\n  isAdmin,\n  publicRoute = false\n}) => {\n  const isLoggedIn = localStorage.getItem('login') === 'true';\n  const userType = localStorage.getItem('userType');\n  const userIsAdmin = localStorage.getItem('isAdmin') === 'true';\n\n  // For public routes, allow access even if not logged in\n  if (publicRoute) {\n    return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If not logged in, redirect to login\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user type does not match the required type, or admin status is required and the user is not an admin\n  if (requiredType && userType !== requiredType || isAdmin && !userIsAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/home\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user meets the requirements, render the component\n  return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","Component","requiredType","isAdmin","publicRoute","isLoggedIn","localStorage","getItem","userType","userIsAdmin","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/React/Blood_bank_react_redux_firebase/blood_bank/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ element: Component, requiredType, isAdmin, publicRoute = false }) => {\r\n  const isLoggedIn = localStorage.getItem('login') === 'true';\r\n  const userType = localStorage.getItem('userType');\r\n  const userIsAdmin = localStorage.getItem('isAdmin') === 'true';\r\n\r\n  // For public routes, allow access even if not logged in\r\n  if (publicRoute) {\r\n    return <Component />;\r\n  }\r\n\r\n  // If not logged in, redirect to login\r\n  if (!isLoggedIn) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // If the user type does not match the required type, or admin status is required and the user is not an admin\r\n  if ((requiredType && userType !== requiredType) || (isAdmin && !userIsAdmin)) {\r\n    return <Navigate to=\"/home\" replace />;\r\n  }\r\n\r\n  // If the user meets the requirements, render the component\r\n  return <Component />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAEC,YAAY;EAAEC,OAAO;EAAEC,WAAW,GAAG;AAAM,CAAC,KAAK;EAC7F,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,MAAM;EAC3D,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAME,WAAW,GAAGH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,MAAM;;EAE9D;EACA,IAAIH,WAAW,EAAE;IACf,oBAAON,OAAA,CAACG,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;;EAEA;EACA,IAAI,CAACR,UAAU,EAAE;IACf,oBAAOP,OAAA,CAACF,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAKX,YAAY,IAAIM,QAAQ,KAAKN,YAAY,IAAMC,OAAO,IAAI,CAACM,WAAY,EAAE;IAC5E,oBAAOX,OAAA,CAACF,QAAQ;MAACkB,EAAE,EAAC,OAAO;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;;EAEA;EACA,oBAAOf,OAAA,CAACG,SAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACG,EAAA,GAtBIjB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}