{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Blood_bank_react_redux_firebase\\\\blood_bank\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './login.css';\nimport { auth } from '../firebase/firebase';\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState('blood_bank'); // default user type\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in from localStorage\n    const loggedInStatus = localStorage.getItem('login');\n    const storedUserType = localStorage.getItem('userType');\n    if (loggedInStatus === 'true' && storedUserType) {\n      setIsLoggedIn(true);\n      setUserType(storedUserType);\n      if (storedUserType === 'blood_bank') {\n        navigate('/bb-dash');\n      } else if (storedUserType === 'hospital') {\n        navigate('/hos-data');\n      }\n    }\n  }, [navigate]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      // Check if the logged-in user is an admin (you'll need to implement this logic)\n      const isAdmin = true; // Replace with actual admin check\n      localStorage.setItem('login', 'true');\n      localStorage.setItem('userType', userType);\n      localStorage.setItem('isAdmin', isAdmin.toString());\n      setIsLoggedIn(true);\n      if (userType === 'blood_bank') {\n        navigate('/bb-dash');\n      } else if (userType === 'hospital') {\n        navigate('/hos-data');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      localStorage.setItem('login', 'false');\n      localStorage.removeItem('userType');\n      localStorage.removeItem('isAdmin');\n      setIsLoggedIn(false);\n      navigate('/');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isLoggedIn) {\n      handleLogout();\n    } else {\n      handleLogin(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: userType,\n          onChange: e => setUserType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blood_bank\",\n            children: \"Blood Bank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hospital\",\n            children: \"Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoggedIn ? 'Logout' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"52uSwMhceLLIDSbbL+6OCXPH9BM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","auth","signInWithEmailAndPassword","signOut","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","error","setError","isLoggedIn","setIsLoggedIn","navigate","loggedInStatus","localStorage","getItem","storedUserType","handleLogin","e","preventDefault","isAdmin","setItem","toString","message","handleLogout","removeItem","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["D:/React/Blood_bank_react_redux_firebase/blood_bank/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './login.css';\r\nimport { auth } from '../firebase/firebase';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('blood_bank'); // default user type\r\n  const [error, setError] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in from localStorage\r\n    const loggedInStatus = localStorage.getItem('login');\r\n    const storedUserType = localStorage.getItem('userType');\r\n    if (loggedInStatus === 'true' && storedUserType) {\r\n      setIsLoggedIn(true);\r\n      setUserType(storedUserType);\r\n      if (storedUserType === 'blood_bank') {\r\n        navigate('/bb-dash');\r\n      } else if (storedUserType === 'hospital') {\r\n        navigate('/hos-data');\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      // Check if the logged-in user is an admin (you'll need to implement this logic)\r\n      const isAdmin = true; // Replace with actual admin check\r\n      localStorage.setItem('login', 'true');\r\n      localStorage.setItem('userType', userType);\r\n      localStorage.setItem('isAdmin', isAdmin.toString());\r\n      setIsLoggedIn(true);\r\n      if (userType === 'blood_bank') {\r\n        navigate('/bb-dash');\r\n      } else if (userType === 'hospital') {\r\n        navigate('/hos-data');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      localStorage.setItem('login', 'false');\r\n      localStorage.removeItem('userType');\r\n      localStorage.removeItem('isAdmin');\r\n      setIsLoggedIn(false);\r\n      navigate('/');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isLoggedIn) {\r\n      handleLogout();\r\n    } else {\r\n      handleLogin(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {!isLoggedIn && (\r\n        <form onSubmit={handleSubmit} className='login-box'>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              value={userType}\r\n              onChange={(e) => setUserType(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"blood_bank\">Blood Bank</option>\r\n              <option value=\"hospital\">Hospital</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\">{isLoggedIn ? 'Logout' : 'Login'}</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;EACxD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMoB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACpD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,KAAK,MAAM,IAAIG,cAAc,EAAE;MAC/CL,aAAa,CAAC,IAAI,CAAC;MACnBJ,WAAW,CAACS,cAAc,CAAC;MAC3B,IAAIA,cAAc,KAAK,YAAY,EAAE;QACnCJ,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM,IAAII,cAAc,KAAK,UAAU,EAAE;QACxCJ,QAAQ,CAAC,WAAW,CAAC;MACvB;IACF;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMK,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMxB,0BAA0B,CAACD,IAAI,EAAEQ,KAAK,EAAEE,QAAQ,CAAC;MACvD;MACA,MAAMgB,OAAO,GAAG,IAAI,CAAC,CAAC;MACtBN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;MACrCP,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEf,QAAQ,CAAC;MAC1CQ,YAAY,CAACO,OAAO,CAAC,SAAS,EAAED,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;MACnDX,aAAa,CAAC,IAAI,CAAC;MACnB,IAAIL,QAAQ,KAAK,YAAY,EAAE;QAC7BM,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM,IAAIN,QAAQ,KAAK,UAAU,EAAE;QAClCM,QAAQ,CAAC,WAAW,CAAC;MACvB;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;IACzB;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM5B,OAAO,CAACF,IAAI,CAAC;MACnBoB,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;MACtCP,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC;MACnCX,YAAY,CAACW,UAAU,CAAC,SAAS,CAAC;MAClCd,aAAa,CAAC,KAAK,CAAC;MACpBC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;IACzB;EACF,CAAC;EAED,MAAMG,YAAY,GAAIR,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,UAAU,EAAE;MACdc,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLP,WAAW,CAACC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAK4B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC7BpB,KAAK,iBAAIT,OAAA;MAAG4B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzC,CAACtB,UAAU,iBACVX,OAAA;MAAMkC,QAAQ,EAAEP,YAAa;MAACC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjD7B,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UACEmC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEjC,KAAM;UACbkC,QAAQ,EAAGlB,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;UACRC,WAAW,EAAC;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjC,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE/B,QAAS;UAChBgC,QAAQ,EAAGlB,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;UACRC,WAAW,EAAC;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjC,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UACEoC,KAAK,EAAE7B,QAAS;UAChB8B,QAAQ,EAAGlB,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;UAAAV,QAAA,gBAER7B,OAAA;YAAQoC,KAAK,EAAC,YAAY;YAAAP,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9CjC,OAAA;YAAQoC,KAAK,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAElB,UAAU,GAAG,QAAQ,GAAG;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvGID,KAAK;EAAA,QAMQH,WAAW;AAAA;AAAA2C,EAAA,GANxBxC,KAAK;AAyGX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}